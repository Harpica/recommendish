name: CI-CD
on:
    push:
        branches: [main]
    pull_request:
        branches: [main]

    workflow_dispatch:

jobs:
    push_to_docker_hub:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout repo
              uses: actions/checkout@v2

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v1

            - name: Login to DockerHub
              uses: docker/login-action@v1
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}

            - name: Build and push server
              uses: docker/build-push-action@v2
              with:
                  context: ./server
                  file: ./server/Dockerfile
                  push: true
                  tags: ${{ secrets.DOCKERHUB_USERNAME }}/node-docker-deploy:latest

            - name: Build and push client
              env:
                  REACT_APP_BASE_URL: ${{ env.REACT_APP_BASE_URL }}
              uses: docker/build-push-action@v2
              with:
                  context: ./client
                  file: ./client/Dockerfile
                  push: true
                  tags: ${{ secrets.DOCKERHUB_USERNAME }}/react-docker-deploy:latest

    deploy:
        runs-on: ubuntu-latest
        needs: [push_to_docker_hub]

        steps:
            - name: Deploy to VPS
              uses: appleboy/ssh-action@master
              with:
                  envs: ${{ secrets.MONGODB_DATABASE_NAME }}
                      ${{ secrets.MONGODB_DATABASE_USERNAME }}
                      ${{ secrets.MONGODB_DATABASE_PASSWORD }}
                      ${{ secrets.MONGODB_DATABASE_PORT }}
                      ${{ env.CLIENT_PORT }}
                      ${{ env.BASE_URL }}
                      ${{ env.PORT }}
                  host: ${{ secrets.VPS_SSH_HOST }}
                  username: ${{ secrets.VPS_SSH_USERNAME }}
                  key: ${{ secrets.VPS_SSH_SECRET }}
                  port: ${{ secrets.VPS_SSH_PORT }}
                  script_stop: true
                  script: |
                      echo "Pull new image"
                      docker compose -f /root/recommendish/docker-compose.yml pull
                      echo "Restart the container"
                      docker compose -f /root/recommendish/docker-compose.yml up --force-recreate --build --no-deps -d
                      echo "Delete old image"
                      docker image prune -f
